/**
 * Line_Numbers.bsh - Adds in Line numbers to selected text
 * 
 * $Id$
 */

import javax.swing.border.*;

void showDialog( View view ) {
  
  title = "Add or Remove Block Decorators";
  
  dialog = new JDialog(view, title, false);
  content = new JPanel(new BorderLayout());
  content.setBorder(new EmptyBorder(5, 5, 5, 5));
  dialog.setContentPane(content);
  
  opPanel = new JPanel( new GridLayout(1,1) );
  
  prPanel = new JPanel(new GridLayout(1, 2));
  prLabel = new JLabel("Title of Section: ");
  prField = new JTextField( "" );
  prPanel.add(prLabel);
  prPanel.add(prField);
  
  opPanel.add( prPanel );
  
  content.add(opPanel, BorderLayout.CENTER);
  
  buttonPanel = new JPanel(new GridLayout(1, 2));
  buttonPanel.setBorder( new EmptyBorder(5, 0, 0, 0));
  
  addButton = new JButton("OK");
  cancelButton = new JButton("Cancel");
  
  buttonPanel.add(addButton);
  buttonPanel.add(cancelButton);
  
  content.add(buttonPanel, BorderLayout.SOUTH);
  
  addButton.addActionListener(this);
  cancelButton.addActionListener(this);
  
  dialog.getRootPane().setDefaultButton(addButton);
  
  actionPerformed(e) {
    this.dialog.dispose();
    
    cmd = e.getActionCommand();
    
	if(cmd.equals("OK")){
		//decryptBuffer(this.pwField.getPassword());
		start( view, prField.getText() );
    }
    
    return;
  }
  
  dialog.pack();
  dialog.setLocationRelativeTo(view);
  dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
  dialog.setVisible(true);
}

void start( View view, String titleStr ){
	//Macros.message( view, "starting now" );
	this.view = view;
	Log.log( Log.DEBUG, BeanShell.class, "started" );
	
	JEditBuffer buffer = textArea.getBuffer();
	Selection[] selections = textArea.getSelection();
	Selection select;
	StringBuilder result = new StringBuilder( "[" + buffer.getPath() + "]" );
	
	if( selections == null || selections.length < 1 ){
		Macros.error( view, "No lines selected" );
		return;
	}
	
	for( int j = 0; j < selections.length; j++ ){
		buildSelection( result, titleStr, selections, j );
	}
	
	//newBuffer = jEdit.newFile( view );
	//area = view.getTextArea();
	//area.setText( result.toString() );
	
	Registers.setRegister('$',result.toString());
	HistoryModel.getModel("clipboard").addItem(result.toString());
}

void buildSelection( StringBuilder result, String titleStr, Selection[] selections, int index ){
	Selection s = selections[index];
	
	if( selections.length == 1 ){
	} else {
		result.append( "Selection[" + index + "]:\n" );
	}
	
	int startLine = s.getStartLine();
	int endLine = s.getEndLine()+1;
	String lineText;
	//Macros.message( view, "startLine[" + startLine + "] endLine[" + endLine + "]" );
	
	String bufferName = buffer.getName().replaceAll( "[.].+", "" );
	
	result.append( "\n{{{\t###" + bufferName + "." + titleStr + "\n" );
	
	for( int i = startLine; i < endLine; i++ ){
		lineText = buffer.getLineText( i );
		//Macros.message( view, "LineText[" + i + "]:" + lineText );
		result.append( "" + i + " : " + lineText + "\n" );
	}
	
	result.append( "}}}\n" );
}

showDialog( view );
