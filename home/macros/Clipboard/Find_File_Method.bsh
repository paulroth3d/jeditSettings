
/*
void start( View view ){
	JEditBuffer buffer = textArea.getBuffer();
	Selection[] selections = textArea.getSelection();
	Selection select;
	
	if( selections.length > 1 ){
		Macros.message( view, "This only works with a single selection" );
	} else if( selections.length < 1 ){
		Macros.message( view, "Please select an file.method as done through Find File Context (cfc)" );
	} else {
		String strToSearch = ("^\\{+\\s+#{3}[^\\n.]+[.]") + (textArea.getSelectedText( selections[0]));
		//String strToSearch = "###[^\\n.]+[.]" + textArea.getSelectedText( selections[0] );
		//Macros.message( view, "get selection found:" + strToSearch );
		
		SearchAndReplace.setSearchString( strToSearch );
		SearchAndReplace.setAutoWrapAround(false);
		SearchAndReplace.setReverseSearch(false);
		SearchAndReplace.setWholeWord(false);
		SearchAndReplace.setIgnoreCase(true);
		SearchAndReplace.setRegexp(true);
		SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
		SearchAndReplace.find(view);
	}
}

start( view );
*/

JEditBuffer buffer = textArea.getBuffer();
Selection[] selections = textArea.getSelection();

if( selections.length < 1 ){
	Macros.message( view, "Please select an file.method as done through Find File Context (cfc)" );
} else {
	JEditBuffer buffer = textArea.getBuffer();
	Selection[] selections = textArea.getSelection();
	String strToSearch = ("^[{\\s]+###[^\\n.]+[.]") + (textArea.getSelectedText( selections[0]));
	//Macros.message( view, "get selection found:" + strToSearch );
	
	SearchAndReplace.setSearchString( strToSearch );
	SearchAndReplace.setAutoWrapAround(true);
	SearchAndReplace.setReverseSearch(false);
	SearchAndReplace.setWholeWord(false);
	SearchAndReplace.setIgnoreCase(true);
	SearchAndReplace.setRegexp(true);
	SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
	SearchAndReplace.find(view);
}