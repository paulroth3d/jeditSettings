// This is a temporary macro. First, check over the
// commands to make sure this is what you intended.
// Then, to run this macro, switch to the buffer
// where you would like to execute it and press C+m C+p.
SearchAndReplace.setSearchString("<h4><span class=\"fn n\"><span class=\"given-name\">([^\\n<]+)</span>\\s*");
SearchAndReplace.setReplaceString("<ul>`<li class=\'fn\'>Given Name</li><li>$1</li>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<span class=\"additional-name\">([^\\n<]+)</span>");
SearchAndReplace.setReplaceString("<li class=\'add-name\'>M.I.</li><li>$1</li>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<span class=\"family-name\">([^\\n<]+)(</span>[ \\t]*)+</h4>");
SearchAndReplace.setReplaceString("<li class=\'family-name\'>Last</li><li>$1</li></h4>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("</li></h4>\\s*<div class=\"adr\">\\s*<span");
SearchAndReplace.setReplaceString("</li><span");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<span class=\"street-address\">([^\\n<]+)(</span>[ \\t]*)+");
SearchAndReplace.setReplaceString("<li class=\'street-address\'>St Addr</li><li>$1</li>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<span class=\"locality\">([^\\n>]+)</span>[ ,\\t]*");
SearchAndReplace.setReplaceString("<li class=\'locality\'>$1</li>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<span class=\"region\">([^\\n>]+)</span>");
SearchAndReplace.setReplaceString("<li class=\'region\'>Region</li><li>$1</li>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("<span class=\"postal-code\">([^\\n>]+)</span>");
SearchAndReplace.setReplaceString("<li class=\'ZIP\'>ZIP</li><li>$1</li>`");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);


SearchAndReplace.setSearchString("</li>`\\s+(</div>\\s+)+<div class=['\"]extra['\"]\\s*>");
SearchAndReplace.setReplaceString("\\n<div class='extra'>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);


SearchAndReplace.setSearchString("</li>\\s+</ul>\\s+</div>");
SearchAndReplace.setReplaceString("</li>`</ul></div>");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li>[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setAutoWrapAround(true);
SearchAndReplace.setReverseSearch(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.find(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("</li>\\s+(<li[^\\n`]+`</ul></div>)");
SearchAndReplace.setReplaceString("</li>$1");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("\\s*<div\\s+class=[\"\']extra[\"\']>\\s+<ul>\\s+<li");
SearchAndReplace.setReplaceString("<li");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);


//Macros.getMacro("Text/Match_Regex").invoke(view);
