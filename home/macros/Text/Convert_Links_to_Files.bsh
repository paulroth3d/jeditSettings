// This is a temporary macro. First, check over the
// commands to make sure this is what you intended.
// Then, to run this macro, switch to the buffer
// where you would like to execute it and press C+m C+p.

String bufferText = textArea.getSelectedText();
textArea.setSelectedText( "./.:\n" + bufferText + "\n" );

SearchAndReplace.setSearchString("^\\./([^\\n:]*):\\ntotal[ \\t]+\\d+\\n");
SearchAndReplace.setReplaceString("$1‡\\n");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("\\d+[ \\t]*\\d+:\\d+[ \\t]+");
SearchAndReplace.setReplaceString("†");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("^[^\\n†]+†");
SearchAndReplace.setReplaceString("†");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

for( int i = 0;i < 50; i++ ){
	SearchAndReplace.setSearchString("^(([^\\n‡]+)[‡†][^\\n]*\\n)†");
	SearchAndReplace.setReplaceString("$1$2†");
	SearchAndReplace.setBeanShellReplace(false);
	SearchAndReplace.setWholeWord(false);
	SearchAndReplace.setIgnoreCase(true);
	SearchAndReplace.setRegexp(true);
	SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
	SearchAndReplace.replaceAll(view);
}


SearchAndReplace.setSearchString("^[^\\n>]*\\n");
SearchAndReplace.setReplaceString("");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("[ \\t]*\\-\\>[ \\t]*");
SearchAndReplace.setReplaceString("‡");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("^([^\\n†]*)†([^\\n‡]+)‡(.*)");
SearchAndReplace.setReplaceString("rm -rdf \"$1/$2\";\ncp -R \\\"$1/$3\\\" $1/;");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);


/*
--
SearchAndReplace.setSearchString("†");
SearchAndReplace.setReplaceString("/");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("[ \\t]*\\-\\>[ \\t]*");
SearchAndReplace.setReplaceString("†");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);

SearchAndReplace.setSearchString("^([^\\n†]+)†([^\\n]+)\\n");
SearchAndReplace.setReplaceString("rm -rdf $1; cp -R \"$2\" ./;\\n");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(true);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
*/
